#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import pandas as pd
import csv

filename = sys.argv[1]

col_name_request = '-l'

if sys.argv[2] == col_name_request:
	col_names = sys.argv[3:]
else:
	col_names = sys.argv[2:]

df = pd.read_csv(filename, delimiter = ':')

col_names = [x.upper() for x in col_names]

for col in col_names:
	if col not in df.columns:
		sys.exit("{} does not exist".format(col))

if sys.argv[2] == col_name_request:
	print(df[col_names].to_string(index = False))
else:
	print(df[col_names].to_string(index=False, header =False))


========================================================================================================

import sys

#cookies = sys.argv[0]
#people = sys.argv[1


def party_planner(cookies, people):
    leftovers = None
    num_each = None

    try:
        num_each = cookies // people
        leftovers = cookies % people
    except ZeroDivisionError as e:
        print("Oops, you entered 0 people will be attending.")
        print("Please enter a good number of people for a party.")
        print("ZeroDivisionError occured : {}".format(e))

    return(num_each, leftovers)

# The main code block is below; do not edit this
lets_party = 'y'
while lets_party == 'y':
	cookies = int(sys.argv[1])
	people = int(sys.argv[2])

	cookies_each, leftovers = party_planner(cookies, people)

	if cookies_each:
		message = "\nLet's party! We\'ll have {} people attending, they\'ll each get to eat {} cookies, and we\'ll have {} left over."

		print(message.format(people, cookies_each, leftovers))

	lets_party = input("\nWould you like to party more? (y or n) ") 

==================================================================================================================


def mean(num_list):
    return sum(num_list) / len(num_list)

def add_five(num_list):
    return [n + 5 for n in num_list]

def main():
    print("Testing mean function")
    n_list = [34, 44, 23, 46, 12, 24]
    correct_mean = 30.5
    assert(mean(n_list) == correct_mean)

    print("Testing add_five function")
    correct_list = [39, 49, 28, 51, 17, 29]
    assert(add_five(n_list) == correct_list)

    print("All tests passed!")

if __name__ == '__main__':
    main()




#print(df[col_names].values)



#print(df.columns)

#print(df.head())
#for col in df[col_names].values:
#	print(col)

# with open (filename, 'r') as f:
# 	csvReader = csv.reader(f, delimiter = ':')
# 	second_col = list(zip(*csvReader))
	
# 	# for row in csvReader:
# 	# 	print(row[0])

# print(second_col[0])

	
# import csv

# with open('path/to/file.txt') as inf:
#     reader = csv.reader(inf, delimiter=" ")
#     second_col = list(zip(*reader))[1]

# 	for line in f:
# 		field1 = line.split(":")
# 		field2 = line.split(":")

# for i in field1:
# 	print(i)
# print(field1)




